name: Nao Nanami Autonomy System

on:
  # 定期実行（2日に1回）
  schedule:
    - cron: '0 0 */2 * *'
  # 手動実行用
  workflow_dispatch:
    inputs:
      initiative_type:
        description: '自律活動の種類'
        required: true
        default: 'random'
        type: choice
        options:
          - random
          - question
          - reflection
          - idea
          - story
          - meta_reflection
      priority:
        description: '優先度'
        required: true
        default: 'medium'
        type: choice
        options:
          - low
          - medium
          - high

# 同時実行を防止する設定
concurrency:
  group: nao-autonomy
  cancel-in-progress: true

# GitHub Actionsに書き込み権限を付与
permissions:
  contents: write
  issues: write

jobs:
  generate-autonomous-activity:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # すべての履歴を取得
          token: ${{ secrets.GITHUB_TOKEN }}  # 明示的にトークンを指定

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        run: |
          npm init -y
          npm install @octokit/rest moment yaml front-matter lodash natural uuid

      - name: Create config directories
        run: |
          mkdir -p .github/config
          mkdir -p .github/temp
          mkdir -p memory/graph

      - name: Analyze repository content
        id: analyze
        run: |
          node .github/scripts/analyze-content.js
          echo "analysis_complete=true" >> $GITHUB_OUTPUT

      - name: Run memory maintenance
        id: memory_maintenance
        run: |
          node -e "
            const memoryManager = require('./.github/scripts/memory-manager.js');
            async function main() {
              const count = await memoryManager.runMemoryMaintenance();
              console.log(\`記憶整理完了: \${count}件の記憶を整理しました\`);
            }
            main().catch(console.error);
          "

      - name: Generate autonomous content
        id: generate
        run: |
          node .github/scripts/generate-content.js
          echo "content_generated=true" >> $GITHUB_OUTPUT
        env:
          INITIATIVE_TYPE: ${{ github.event.inputs.initiative_type || 'random' }}
          PRIORITY: ${{ github.event.inputs.priority || 'medium' }}

      - name: Create autonomy issue
        if: steps.generate.outputs.content_generated == 'true'
        uses: peter-evans/create-issue-from-file@v4
        with:
          title: ${{ env.NAO_THOUGHT_TITLE }}
          content-filepath: ./.github/temp/autonomy-content.md
          labels: |
            autonomy
            ${{ env.NAO_THOUGHT_TYPE }}
            ${{ env.NAO_THOUGHT_PRIORITY }}
          token: ${{ secrets.GITHUB_TOKEN }}

      # 一時ディレクトリに生成されたコンテンツとメタデータを保存
      - name: Save generated content
        if: steps.generate.outputs.content_generated == 'true'
        run: |
          mkdir -p /tmp/nao_autonomy
          
          # 生成された内容を保存
          if [ -f "./.github/temp/autonomy-content.md" ]; then
            cp ./.github/temp/autonomy-content.md /tmp/nao_autonomy/
            
            # 環境変数を一時ファイルに保存
            echo "${{ env.NAO_THOUGHT_TITLE }}" > /tmp/nao_autonomy/thought_title.txt
            echo "${{ env.NAO_THOUGHT_CATEGORY }}" > /tmp/nao_autonomy/thought_category.txt
            echo "${{ env.NAO_THOUGHT_FILENAME }}" > /tmp/nao_autonomy/thought_filename.txt
          fi
      
      # 最新の変更を取得して同期
      - name: Sync with latest changes
        if: steps.generate.outputs.content_generated == 'true'
        run: |
          git config --local user.name 'Nao Nanami (Automated)'
          git config --local user.email 'nao-amj@users.noreply.github.com'
          git fetch --all
          git reset --hard origin/main
      
      # 生成されたコンテンツを復元して追加
      - name: Restore and commit generated content
        if: steps.generate.outputs.content_generated == 'true'
        run: |
          if [ -f "/tmp/nao_autonomy/autonomy-content.md" ]; then
            # 環境変数を復元
            NAO_THOUGHT_TITLE=$(cat /tmp/nao_autonomy/thought_title.txt)
            NAO_THOUGHT_CATEGORY=$(cat /tmp/nao_autonomy/thought_category.txt)
            NAO_THOUGHT_FILENAME=$(cat /tmp/nao_autonomy/thought_filename.txt)
            
            # ディレクトリ作成とファイルコピー
            mkdir -p dreams/$NAO_THOUGHT_CATEGORY
            cp /tmp/nao_autonomy/autonomy-content.md dreams/$NAO_THOUGHT_CATEGORY/$NAO_THOUGHT_FILENAME
            
            # 変更をコミット
            git add dreams/
            git commit -m "🌱 七海直の自律的思考: $NAO_THOUGHT_TITLE" || echo "No changes to commit"
            
            # プッシュ処理
            git push || echo "Push failed, will try force push"
            git push --force-with-lease || echo "Force push also failed"
          else
            echo "No generated content found, skipping commit"
          fi
